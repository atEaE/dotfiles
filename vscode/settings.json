{
    // =========================================================
    // == vscode global settings
    // =========================================================
    /* ========== Window ========== */
    "window.closeWhenEmpty": false,                                         // 最後のエディタをCloseした時に、VSCodeを閉じない。
    "breadcrumbs.enabled": true,                                            // ファイルパンくずの表示をする。

    /* ========== Workbench ========== */
    "workbench.iconTheme": "vscode-icons",                                  // ワークベンチのアイコンに"vscode-icons"を設定する。
    "workbench.sideBar.location": "left",                                   // サイドバーを左側へ表示します。(default: left)
    "workbench.activityBar.visible": true,                                  // サイドバー内のアクティビティバーの表示を有効にします。(default:)
    "workbench.statusBar.visible": true,                                    // Workbenchの下端にステータスバーを表示します。(default: true)
    "workbench.editor.showTabs": true,                                      // タブの表示を有効化します。(default: true)
    "workbench.list.automaticKeyboardNavigation": false,                    // Workbench上のListで機能するキーボードナビゲーションを無効にします。
    "workbench.list.keyboardNavigation": "filter",                          // キーボードナビケーション有効時、対象をフィルタリングします。

    /* ========== Editor ========== */
    "editor.lineNumbers": "on",                                             // 行番号を表示します。(default: on)
    "editor.fontSize": 11,                                                  // フォントサイズを少し小さめに(default: 12)
    "editor.folding": true,                                                 // コードの折りたたみを許可する。(default: true)
    "editor.renderIndentGuides": true,                                      // インデントのガイドラインを表示する。(default: true)
    "editor.matchBrackets": "always",                                       // 対応する括弧に合わせて、強調表示を行う。(default: always)
    "editor.detectIndentation": true,                                       // ファイル種別に基づいて、インデントとタブの設定を変更する。
    "editor.minimap.enabled": false,                                        // エディタ右側に表示されるミニマップを非常時に設定する。
    "editor.roundedSelection": false,                                       // 選択範囲の角を丸めない。(default: true)
    "editor.cursorStyle": "line",                                           // カーソルのスタイルを変更する。(default: line)
    "editor.cursorBlinking": "expand",                                      // カーソル待機時にカーソルをExpandさせる。(default: blink)
    "editor.letterSpacing": 0.1,                                            // 文字間隔を0.1に設定。(default: 0)
    "editor.scrollBeyondLastLine": false,                                   // 最後のラインを越えて、スクロールしない。(default: true)
    "editor.snippetSuggestions": "top",                                     // snippetのサジェストを先頭に表示する。
    "editor.links": true,                                                   // Linkのクリックを可能にする。(default: true)

    /* ========== Files ========== */
    "files.autoGuessEncoding": true,                                        // 文字コードの自動判別を有効化する。
    "files.exclude": {
        "**/.git": true,                                                    // 除外ファイルの設定: .gitの除外
        "**/.svn": true,                                                    // 除外ファイルの設定: .svnの除外
        "**/.hg": true,                                                     // 除外ファイルの設定: .hgの除外
        "**/CVS": true,                                                     // 除外ファイルの設定: CVSの除外
        "**/.DS_Store": true                                                // 除外ファイルの設定: .DS_Storeの除外
    },
    "files.associations": {                                                 // ファイル関連付けの設定
        "*.txt": "markdown",                                                // ファイル関連付けの設定: *.txtファイルは"markdown"の設定を適用する。
        "*.json.txt": "json",                                               // ファイル関連付けの設定: *.json.txtは"json"の設定を適用する。
        "*.html.tmpl": "html",                                              // ファイル関連付けの設定: *.html.tmplは"html"の設定を適用する。
        "*.yml": "yaml",                                                    // ファイル関連付けの設定: *.ymlは"yaml"の設定を適用する。
    },

    // =========================================================
    // == launch settings
    // =========================================================
    "launch": {
        "configurations": [
            /* ========== Golang ========== */
            {
                "type": "go",
                "name": "Launch(golang debug)",
                "request": "launch",
                "program": "${file}",
                "cwd": "."
            }
        ],
        "compounds": []
    },

    // =========================================================
    // == extensions settings
    // =========================================================
    /* ========== Extensins All ========== */
    "extensions.autoUpdate": true,                                          // 拡張機能を自動的に更新します。
    "extensions.ignoreRecommendations": false,                              // 推奨機能通知を有効にする。

    /* ========== VSCode Neovim ========== */
    "vscode-neovim.neovimExecutablePaths.darwin": "/usr/local/bin/nvim",    // MacOS用設定: neovimの実行ファイルパスを設定する。
    "vscode-neovim.neovimInitVimPaths.darwin": "~/.config/nvim/init.vim",   // MacOS用設定: neovimのRCファイルパスを設定する。

    /* ========== VSNotes ========== */
    "vsnotes.defaultNotePath": "~/.vscode/notes",                           // Note格納先フォルダを指定します。
    "vsnotes.defaultSnippet": {                                             // Defaultのスニペットとして、Markdownを適用します。
        "langId": "markdown",
        "name": "vsnote_template_default"
    },

    /* ========== VSCode Icons ========== */
    "vsicons.dontShowNewVersionMessage": false,                             // VSCodeIconsの新Versionがリリースされた場合はPopUpメッセージを表示する。

    /* ========== Go ========== */
    "go.useLanguageServer": true,                                           // golang langusage serverを使用します。
    "go.lintOnSave": "file",                                                // ファイル保存後のLintをファイルに対して適用します。
    "go.useCodeSnippetsOnFunctionSuggest": true,
    "gopls": {
        "ui.completion.usePlaceholders": false,                             // 関数補完時にプレースホルダーを挿入しません。
        "ui.diagnostic.staticcheck": true,                                  // ※実験的パラメータ 静的解析を有効にします。
        "ui.documentation.hoverKind": "FullDocumentation",                  // ホバーテキストには、全情報を表示します。
        "ui.documentation.linksInHover": true,                              // ホバーテキストからドキュメントへのリンクを有効にします。
    },

    // =========================================================
    // == language settings
    // =========================================================
    /* ========== HTML ========== */
    "[html]": {
        "editor.tabSize": 2,                                                // Tabサイズを2に設定します。
        "editor.insertSpaces": true,                                        // Tabキーの入力を半角スペースに置き換えます。
    },

    /* ========== CSS ========== */
    "[css]": {
        "editor.tabSize": 2,                                                // Tabサイズを2に設定します。
        "editor.insertSpaces": true,                                        // Tabキーの入力を半角スペースに置き換えます。
    },

    /* ========== SCSS ========== */
    "[scss]": {
        "editor.tabSize": 2,                                                // Tabサイズを2に設定します。
        "editor.insertSpaces": true,                                        // Tabキーの入力を半角スペースに置き換えます。
    },

    /* ========== JSON ========== */
    "[json]": {
        "editor.tabSize": 4,                                                // Tabサイズを4に設定します。
        "editor.insertSpaces": true,                                        // Tabキーの入力を半角スペースに置き換えます。
        "editor.formatOnSave": true,                                        // ファイル保存時にフォーマットを行います。
    },

    /* ========== YAML ========== */
    "[yaml]": {
        "editor.tabSize": 2,                                                // Tabサイズを2に設定します。
        "editor.insertSpaces": true,                                        // Tabキーの入力を半角スペースに置き換えます。
        "editor.formatOnSave": true,                                        // ファイル保存時にフォーマットを行います。
        "editor.formatOnSaveMode": "file"                                   // ファイル保存時のフォーマットはファイルに対して実行します。
    },

    /* ========== Markdown ========== */
    "[markdown]": {
        "editor.trimAutoWhitespace": false,                                 // Whitespaceの自動トリミングを実行しない。
        "editor.wordWrap": "on",                                            // 右端で文字の折り返しを有効にする。
    },

    /* ========== Makefile ========== */
    "[makefile]": {
        "editor.tabSize": 4,                                                // Tabサイズを4に設定します。
        "editor.insertSpaces": false                                        // Tabキーの入力を半角スペースに置き換えない。
    },

    /* ========== Batfile ========== */
    "[bat]": {
        "files.encoding": "shiftjis",                                       // ファイルのエンコードを"shift-jis"に設定します。
        "files.eol": "\r\n",                                                // ファイルのEOLを"¥r¥n"に設定します。
    },

    /* ========== Golang ========== */
    "[go]": {
        "editor.tabSize": 4,                                                // Tabサイズを4に設定します。
        "editor.formatOnSave": true,                                        // ファイル保存時にフォーマットを行います。
        "editor.codeActionsOnSave": {                                       // ファイル保存時のCode Actionを設定します。
            "source.organizeImports": true,                                 // 自動的にimportを補完します。
        }
    },
    "go.toolsManagement.autoUpdate": true,

    /* ========== TypeScript ========== */
    "[typescript]": {
        "editor.tabSize": 2,                                                // Tabサイズを4に設定します。
        "editor.insertSpaces": true,                                        // Tabキーの入力を半角スペースに置き換えます。
        "editor.formatOnSave": true,                                        // ファイル保存時にフォーマットを行います。
    }
}
